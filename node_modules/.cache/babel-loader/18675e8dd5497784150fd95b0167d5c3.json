{"ast":null,"code":"var _jsxFileName = \"/Users/inju/temp/create-react-app/src/components/navbar/components/profileImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageData from '../../../hooks/useLocalStorageData';\nimport character1 from '../../../assets/images/character1.jpg';\nimport character2 from '../../../assets/images/character2.jpg';\nimport character3 from '../../../assets/images/character3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileImage() {\n  _s();\n  const points = localStorage.getItem('points');\n  const imageId = localStorage.getItem('imageId');\n  // const { points, imageId } = useLocalStorageData();\n\n  const [refreshKey, setRefreshKey] = useState(0); // State variable to force component re-render\n\n  useEffect(() => {\n    // This effect will run whenever local storage changes\n    const handleStorageChange = () => {\n      // Increment the key to force re-render\n      setRefreshKey(prevKey => prevKey + 1);\n      console.log('This effect will run whenever local storage changes');\n    };\n\n    // Listen for changes in local storage\n    window.addEventListener('storage', handleStorageChange);\n\n    // Clean up event listener\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []); // This effect runs only once when the component mounts\n\n  let selectedImage = null;\n  if (imageId === '1') {\n    selectedImage = character1;\n  } else if (imageId === '2') {\n    selectedImage = character2;\n  } else if (imageId === '3') {\n    selectedImage = character3;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-image-container\",\n    children: [\" \", selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedImage,\n      alt: \"Profile\",\n      className: \"profile-image-container__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"profile-image-container__points\",\n      children: [points, \"pts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, refreshKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileImage, \"URqI0iCTtJPArFfWptlzhmKSLEg=\");\n_c = ProfileImage;\nexport default ProfileImage;\nvar _c;\n$RefreshReg$(_c, \"ProfileImage\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorageData","character1","character2","character3","ProfileImage","points","localStorage","getItem","imageId","refreshKey","setRefreshKey","handleStorageChange","prevKey","console","log","window","addEventListener","removeEventListener","selectedImage"],"sources":["/Users/inju/temp/create-react-app/src/components/navbar/components/profileImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useLocalStorageData from '../../../hooks/useLocalStorageData';\nimport character1 from '../../../assets/images/character1.jpg';\nimport character2 from '../../../assets/images/character2.jpg';\nimport character3 from '../../../assets/images/character3.jpg';\n\nfunction ProfileImage() {\n  const points = localStorage.getItem('points');\n  const imageId = localStorage.getItem('imageId');\n  // const { points, imageId } = useLocalStorageData();\n\n  const [refreshKey, setRefreshKey] = useState(0); // State variable to force component re-render\n\n  useEffect(() => {\n    // This effect will run whenever local storage changes\n    const handleStorageChange = () => {\n      // Increment the key to force re-render\n      setRefreshKey(prevKey => prevKey + 1);\n      console.log('This effect will run whenever local storage changes');\n    };\n\n    // Listen for changes in local storage\n    window.addEventListener('storage', handleStorageChange);\n\n    // Clean up event listener\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []); // This effect runs only once when the component mounts\n\n  let selectedImage = null;\n  if (imageId === '1') {\n    selectedImage = character1;\n  } else if (imageId === '2') {\n    selectedImage = character2;\n  } else if (imageId === '3') {\n    selectedImage = character3;\n  }\n\n  return (\n    <div key={refreshKey} className=\"profile-image-container\"> {/* Use the refreshKey as the key to force re-render */}\n      {selectedImage && <img src={selectedImage} alt=\"Profile\" className=\"profile-image-container__image\" />}\n      <p className=\"profile-image-container__points\">{points}pts</p>\n    </div>\n  );\n}\n\nexport default ProfileImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,OAAOC,UAAU,MAAM,uCAAuC;AAC9D,OAAOC,UAAU,MAAM,uCAAuC;AAC9D,OAAOC,UAAU,MAAM,uCAAuC;AAAC;AAE/D,SAASC,YAAY,GAAG;EAAA;EACtB,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC/C;;EAEA,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,mBAAmB,GAAG,MAAM;MAChC;MACAD,aAAa,CAACE,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;MACrCC,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IACpE,CAAC;;IAED;IACAC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;;IAEvD;IACA,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIO,aAAa,GAAG,IAAI;EACxB,IAAIV,OAAO,KAAK,GAAG,EAAE;IACnBU,aAAa,GAAGjB,UAAU;EAC5B,CAAC,MAAM,IAAIO,OAAO,KAAK,GAAG,EAAE;IAC1BU,aAAa,GAAGhB,UAAU;EAC5B,CAAC,MAAM,IAAIM,OAAO,KAAK,GAAG,EAAE;IAC1BU,aAAa,GAAGf,UAAU;EAC5B;EAEA,oBACE;IAAsB,SAAS,EAAC,yBAAyB;IAAA,gBACtDe,aAAa,iBAAI;MAAK,GAAG,EAAEA,aAAc;MAAC,GAAG,EAAC,SAAS;MAAC,SAAS,EAAC;IAAgC;MAAA;MAAA;MAAA;IAAA,QAAG,eACtG;MAAG,SAAS,EAAC,iCAAiC;MAAA,WAAEb,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA,GAFtDI,UAAU;IAAA;IAAA;IAAA;EAAA,QAGd;AAEV;AAAC,GAvCQL,YAAY;AAAA,KAAZA,YAAY;AAyCrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}