{"ast":null,"code":"var _jsxFileName = \"/Users/inju/temp/create-react-app/src/components/navbar/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ProfileImage from './components/profileImage';\nimport logoImage from '../../assets/images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar() {\n  _s();\n  const [imageId, setImageId] = useState('');\n\n  // Load the image ID from localStorage when the component mounts\n  useEffect(() => {\n    const storedImageId = localStorage.getItem('image-id');\n    if (storedImageId) {\n      setImageId(storedImageId);\n    }\n  }, []);\n\n  // Construct the image path based on the stored image ID\n  const imagePath = `../../../assets/images/character${imageId}.jpg`;\n  console.log(imageId);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Logo\",\n      className: \"nav-bar-container__logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProfileImage, {\n      imagePath: imagePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"TSZ03n0zxlV2EcDKXI6xOPxF0O8=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useEffect","useState","ProfileImage","logoImage","NavBar","imageId","setImageId","storedImageId","localStorage","getItem","imagePath","console","log"],"sources":["/Users/inju/temp/create-react-app/src/components/navbar/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ProfileImage from './components/profileImage';\nimport logoImage from '../../assets/images/logo.png';\n\nfunction NavBar() {\n  const [imageId, setImageId] = useState('');\n\n  // Load the image ID from localStorage when the component mounts\n  useEffect(() => {\n    const storedImageId = localStorage.getItem('image-id');\n    if (storedImageId) {\n      setImageId(storedImageId);\n    }\n  }, []);\n\n  // Construct the image path based on the stored image ID\n  const imagePath = `../../../assets/images/character${imageId}.jpg`;\n  console.log(imageId)\n\n  return (\n    <nav className='nav-bar-container'>\n        <img src={logoImage} alt=\"Logo\" className=\"nav-bar-container__logo\" />\n        <ProfileImage imagePath={imagePath} />\n    </nav>\n  );\n}\n\nexport default NavBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,8BAA8B;AAAC;AAErD,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACjBD,UAAU,CAACC,aAAa,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,SAAS,GAAI,mCAAkCL,OAAQ,MAAK;EAClEM,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EAEpB,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAC9B;MAAK,GAAG,EAAEF,SAAU;MAAC,GAAG,EAAC,MAAM;MAAC,SAAS,EAAC;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAG,eACtE,QAAC,YAAY;MAAC,SAAS,EAAEO;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEV;AAAC,GArBQN,MAAM;AAAA,KAANA,MAAM;AAuBf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}