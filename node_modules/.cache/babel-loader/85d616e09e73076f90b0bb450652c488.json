{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useLocalStorageData = () => {\n  _s();\n  const [points, setPoints] = useState(() => {\n    const storedPoints = localStorage.getItem('points');\n    return storedPoints ? parseInt(storedPoints) : 0;\n  });\n  const [imageId, setImageId] = useState(() => {\n    const storedImageId = localStorage.getItem('imageId');\n    return storedImageId || '';\n  });\n  useEffect(() => {\n    const handleStorageChange = event => {\n      if (event.key === 'points') {\n        setPoints(parseInt(event.newValue));\n      } else if (event.key === 'imageId') {\n        setImageId(event.newValue);\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []); // Empty dependency array ensures this effect only runs once\n\n  return {\n    points,\n    imageId\n  };\n};\n_s(useLocalStorageData, \"V2vGcvIXBHm1WgcCJBMbB8mONVM=\");\nexport default useLocalStorageData;","map":{"version":3,"names":["useState","useEffect","useLocalStorageData","points","setPoints","storedPoints","localStorage","getItem","parseInt","imageId","setImageId","storedImageId","handleStorageChange","event","key","newValue","window","addEventListener","removeEventListener"],"sources":["/Users/inju/temp/create-react-app/src/hooks/useLocalStorageData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useLocalStorageData = () => {\n  const [points, setPoints] = useState(() => {\n    const storedPoints = localStorage.getItem('points');\n    return storedPoints ? parseInt(storedPoints) : 0;\n  });\n\n  const [imageId, setImageId] = useState(() => {\n    const storedImageId = localStorage.getItem('imageId');\n    return storedImageId || '';\n  });\n\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      if (event.key === 'points') {\n        setPoints(parseInt(event.newValue));\n      } else if (event.key === 'imageId') {\n        setImageId(event.newValue);\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []); // Empty dependency array ensures this effect only runs once\n\n  return { points, imageId };\n};\n\nexport default useLocalStorageData;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,MAAM;IACzC,MAAMK,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnD,OAAOF,YAAY,GAAGG,QAAQ,CAACH,YAAY,CAAC,GAAG,CAAC;EAClD,CAAC,CAAC;EAEF,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC3C,MAAMW,aAAa,GAAGL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACrD,OAAOI,aAAa,IAAI,EAAE;EAC5B,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACd,MAAMW,mBAAmB,GAAIC,KAAK,IAAK;MACrC,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;QAC1BV,SAAS,CAACI,QAAQ,CAACK,KAAK,CAACE,QAAQ,CAAC,CAAC;MACrC,CAAC,MAAM,IAAIF,KAAK,CAACC,GAAG,KAAK,SAAS,EAAE;QAClCJ,UAAU,CAACG,KAAK,CAACE,QAAQ,CAAC;MAC5B;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;IAEvD,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IAAET,MAAM;IAAEM;EAAQ,CAAC;AAC5B,CAAC;AAAC,GA5BIP,mBAAmB;AA8BzB,eAAeA,mBAAmB"},"metadata":{},"sourceType":"module"}