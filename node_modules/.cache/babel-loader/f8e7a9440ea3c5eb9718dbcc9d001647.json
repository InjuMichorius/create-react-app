{"ast":null,"code":"var _jsxFileName = \"/Users/inju/temp/create-react-app/src/components/navbar/components/profileImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport character1 from '../../../assets/images/character1.jpg';\nimport character2 from '../../../assets/images/character2.jpg';\nimport character3 from '../../../assets/images/character3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileImage() {\n  _s();\n  let updatedImageId;\n  const [points, setPoints] = useState(0);\n  const [imageId, setImageId] = useState('');\n  useEffect(() => {\n    // Fetch points from localStorage when the component mounts\n    const storedPoints = localStorage.getItem('points');\n    if (storedPoints) {\n      setPoints(parseInt(storedPoints)); // Convert to integer\n    }\n\n    // Fetch image-id from localStorage when the component mounts\n    const storedImageId = localStorage.getItem('image-id');\n    if (storedImageId) {\n      setImageId(storedImageId);\n    }\n\n    // Listen for changes to localStorage points\n    const handlePointsChange = () => {\n      const updatedPoints = localStorage.getItem('points');\n      if (updatedPoints) {\n        setPoints(parseInt(updatedPoints)); // Update points state\n      }\n    };\n\n    // Listen for changes to localStorage image-id\n    const handleImageIdChange = () => {\n      const updatedImageId = localStorage.getItem('image-id');\n      console.log('Image ID changed:', updatedImageId); // Debugging log\n      if (updatedImageId) {\n        setImageId(updatedImageId); // Update imageId state\n      }\n    };\n\n    window.addEventListener('storage', handlePointsChange);\n    window.addEventListener('storage', handleImageIdChange);\n    console.log('Rendering with imageId:', imageId); // Debugging log\n\n    // Cleanup function\n    return () => {\n      window.removeEventListener('storage', handlePointsChange);\n    };\n  }, [imageId]); // Empty dependency array ensures useEffect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-image-container\",\n    children: [updatedImageId === '1' && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character1,\n      alt: \"Profile\",\n      className: \"profile-image-container__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }, this), updatedImageId === '2' && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character2,\n      alt: \"Profile\",\n      className: \"profile-image-container__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }, this), updatedImageId === '3' && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character3,\n      alt: \"Profile\",\n      className: \"profile-image-container__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"profile-image-container__points\",\n      children: [points, \"pts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileImage, \"krtm9TpM+vWRLKzfky9naVpVFXE=\");\n_c = ProfileImage;\nexport default ProfileImage;\nvar _c;\n$RefreshReg$(_c, \"ProfileImage\");","map":{"version":3,"names":["React","useState","useEffect","character1","character2","character3","ProfileImage","updatedImageId","points","setPoints","imageId","setImageId","storedPoints","localStorage","getItem","parseInt","storedImageId","handlePointsChange","updatedPoints","handleImageIdChange","console","log","window","addEventListener","removeEventListener"],"sources":["/Users/inju/temp/create-react-app/src/components/navbar/components/profileImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport character1 from '../../../assets/images/character1.jpg';\nimport character2 from '../../../assets/images/character2.jpg';\nimport character3 from '../../../assets/images/character3.jpg';\n\nfunction ProfileImage() {\n  let updatedImageId\n  const [points, setPoints] = useState(0);\n  const [imageId, setImageId] = useState('');\n\n  useEffect(() => {\n    // Fetch points from localStorage when the component mounts\n    const storedPoints = localStorage.getItem('points');\n    if (storedPoints) {\n      setPoints(parseInt(storedPoints)); // Convert to integer\n    }\n\n    // Fetch image-id from localStorage when the component mounts\n    const storedImageId = localStorage.getItem('image-id');\n    if (storedImageId) {\n      setImageId(storedImageId);\n    }\n\n    // Listen for changes to localStorage points\n    const handlePointsChange = () => {\n      const updatedPoints = localStorage.getItem('points');\n      if (updatedPoints) {\n        setPoints(parseInt(updatedPoints)); // Update points state\n      }\n    };\n\n    // Listen for changes to localStorage image-id\n    const handleImageIdChange = () => {\n      const updatedImageId = localStorage.getItem('image-id');\n      console.log('Image ID changed:', updatedImageId); // Debugging log\n      if (updatedImageId) {\n        setImageId(updatedImageId); // Update imageId state\n      }\n    };\n\n    window.addEventListener('storage', handlePointsChange);\n    window.addEventListener('storage', handleImageIdChange);\n    console.log('Rendering with imageId:', imageId); // Debugging log\n\n    // Cleanup function\n    return () => {\n      window.removeEventListener('storage', handlePointsChange);\n    };\n  }, [imageId]); // Empty dependency array ensures useEffect runs only once on mount\n\n  return (\n    <div className=\"profile-image-container\">\n      {updatedImageId === '1' && <img src={character1} alt=\"Profile\" className=\"profile-image-container__image\" />}\n      {updatedImageId === '2' && <img src={character2} alt=\"Profile\" className=\"profile-image-container__image\" />}\n      {updatedImageId === '3' && <img src={character3} alt=\"Profile\" className=\"profile-image-container__image\" />}\n      <p className=\"profile-image-container__points\">{points}pts</p>\n    </div>\n  );\n}\n\nexport default ProfileImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,uCAAuC;AAC9D,OAAOC,UAAU,MAAM,uCAAuC;AAC9D,OAAOC,UAAU,MAAM,uCAAuC;AAAC;AAE/D,SAASC,YAAY,GAAG;EAAA;EACtB,IAAIC,cAAc;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnD,IAAIF,YAAY,EAAE;MAChBH,SAAS,CAACM,QAAQ,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC;IACrC;;IAEA;IACA,MAAMI,aAAa,GAAGH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIE,aAAa,EAAE;MACjBL,UAAU,CAACK,aAAa,CAAC;IAC3B;;IAEA;IACA,MAAMC,kBAAkB,GAAG,MAAM;MAC/B,MAAMC,aAAa,GAAGL,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACpD,IAAII,aAAa,EAAE;QACjBT,SAAS,CAACM,QAAQ,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;MACtC;IACF,CAAC;;IAED;IACA,MAAMC,mBAAmB,GAAG,MAAM;MAChC,MAAMZ,cAAc,GAAGM,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACvDM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEd,cAAc,CAAC,CAAC,CAAC;MAClD,IAAIA,cAAc,EAAE;QAClBI,UAAU,CAACJ,cAAc,CAAC,CAAC,CAAC;MAC9B;IACF,CAAC;;IAEDe,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,kBAAkB,CAAC;IACtDK,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEX,OAAO,CAAC,CAAC,CAAC;;IAEjD;IACA,OAAO,MAAM;MACXY,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEP,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,oBACE;IAAK,SAAS,EAAC,yBAAyB;IAAA,WACrCH,cAAc,KAAK,GAAG,iBAAI;MAAK,GAAG,EAAEJ,UAAW;MAAC,GAAG,EAAC,SAAS;MAAC,SAAS,EAAC;IAAgC;MAAA;MAAA;MAAA;IAAA,QAAG,EAC3GI,cAAc,KAAK,GAAG,iBAAI;MAAK,GAAG,EAAEH,UAAW;MAAC,GAAG,EAAC,SAAS;MAAC,SAAS,EAAC;IAAgC;MAAA;MAAA;MAAA;IAAA,QAAG,EAC3GG,cAAc,KAAK,GAAG,iBAAI;MAAK,GAAG,EAAEF,UAAW;MAAC,GAAG,EAAC,SAAS;MAAC,SAAS,EAAC;IAAgC;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5G;MAAG,SAAS,EAAC,iCAAiC;MAAA,WAAEG,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEV;AAAC,GArDQF,YAAY;AAAA,KAAZA,YAAY;AAuDrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}